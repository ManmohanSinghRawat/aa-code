{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","page","data","changeList","bind","assertThisInitialized","userdata","push","setState","ele","a","map","i","react_default","createElement","App_Header","App_CHANGEPAGE","name","changePage","App_SHOWALLINDIRECTORY","del","App_TAKEDATAINDIRECTORY","enterDataToDirectory","handlePage","Component","Header","SHOWALLINDIRECTORY","de","userdetail","contact","App_TROW","num","number","style","tb","TAKEDATAINDIRECTORY","_this2","changeName","changeNumber","handleSubmit","e","target","value","preventDefault","d","onSubmit","placeholder","onChange","type","show","CHANGEPAGE","_this3","onClick","TROW","_this4","deleteContact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3fe1361.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n   constructor(props)\n   {\n      super(props);\n      this.state = {\n         page : \"First\",\n         data : []\n      };\n      this.changeList = this.changeList.bind(this);\n   }\n\n   enterDataToDirectory(userdata)\n   {\n      this.state.data.push(userdata); \n      \n   }\n\n   changePage()\n   {\n      if(this.state.page === 'First')\n         this.setState({\n            page : \"Second\",\n         });\n      else \n         this.setState({\n            page : \"First\",\n         });\n   }\n\n   changeList(ele)\n   {\n      //console.log(ele);\n      var a = this.state.data;\n      //var b = [];\n      //console.log(a.length);\n\n      this.setState({\n         data : []\n      });\n      //console.log(ele);\n\n      a.map(function(a, i){\n         if(i!==ele)\n            this.state.data.push(a[i]);\n      })\n      //console.log(b);\n      //console.log(this.state.data);\n   }\n\n   handlePage()\n   {\n      if(this.state.page === 'First')\n         return (\n            <div>\n               <Header />\n               <CHANGEPAGE name=\"ADD NEW CONTACT\" page={this.changePage.bind(this)}/>\n               <SHOWALLINDIRECTORY data={this.state.data} del={this.changeList.bind(this)} />\n            </div>\n         );\n      else if(this.state.page === 'Second')\n      return (\n         <div>\n            <Header />\n            <CHANGEPAGE name=\"BACK\" page={this.changePage.bind(this)}/>\n            <TAKEDATAINDIRECTORY data={this.enterDataToDirectory.bind(this)}/>\n         </div>\n      );\n   }\n\n   render() {\n      return (\n         <div>\n            {this.handlePage()}\n         </div>\n      );\n   }\n}\n\nclass Header extends Component{\n   render()\n   {\n      return(\n         <div>\n            PHONE DIRECTORY\n         </div>\n      );\n   }\n}\n\nclass SHOWALLINDIRECTORY extends Component{\n \n   render()\n   {\n      var de = this.props.del;\n      var i=-1;\n      var userdetail = this.props.data.map(function(contact) { \n         i++;\n         return(\n             <TROW num={i} name={contact.name} del={de} number={contact.number} />\n         )\n     });\n       \n      var tb=\"width:100%; fontSize:15px;\";\n      return(\n\n         <div>\n            <table style={this.props.tb}>\n               <thead>\n                  <tr>\n                     <th>Name</th> \n                     <th>Number</th>\n                     <th>Delete</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {userdetail}\n               </tbody>\n            </table>\n         </div>\n      );\n   }\n}\n\nclass TAKEDATAINDIRECTORY extends Component{\n\n   constructor(props){\n      super(props);\n\n      this.state = {\n         name: '',\n         number:''\n      };\n\n      this.changeName = this.changeName.bind(this);\n      this.changeNumber = this.changeNumber.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n   }\n\n   changeName(e)\n   {\n     this.setState({\n        name : e.target.value,\n     });\n   }\n   changeNumber(e)\n   {\n      this.setState({\n         number : e.target.value,\n      });\n   }\n   handleSubmit(e){\n       e.preventDefault();\n      var d = {\n         name: this.state.name, \n         number : this.state.number\n      };\n\n      this.props.data(d);\n   }\n   render()\n   {\n      var show =\"fontSize:10px;\";\n      return(\n         <div>\n           <form onSubmit={this.handleSubmit} >\n              Username : <input placeholder=\"Username\" onChange={this.changeName} type=\"text\" /> <br />\n              Phone : <input placeholder=\"XXXXXXXXXX\" onChange={this.changeNumber} type=\"text\" /> <br />\n              <br /><br />\n              <span style={this.props.show}>\n                 Enter data is: <br />\n                 Name: <span>{this.state.name}</span><br />\n                 Number: <span >{this.state.number}</span><br />\n              </span>\n              <button type='submit' >Add Contact</button>\n           </form>\n         </div>\n      );\n   }\n}\n\nclass CHANGEPAGE extends Component{\n   render()\n   {\n      return(\n         <div>\n           <button onClick={() => this.props.page()}>{this.props.name}</button>\n         </div>\n      );\n   }\n}\n\nclass TROW extends Component{\n\n   constructor(props){\n      super(props);\n\n      this.deleteContact = this.deleteContact.bind(this);\n   }\n\n   deleteContact(e)\n   {\n      //console.log(e.target.value);\n      return this.props.del(e.target.value);\n   }\n   render()\n   { \n      return(\n         <tr>\n            <td>{this.props.name}</td>\n            <td>{this.props.number}</td>\n            <td><button value={this.props.num} onClick={this.deleteContact}>Delete</button></td>\n         </tr>\n      );\n   }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}